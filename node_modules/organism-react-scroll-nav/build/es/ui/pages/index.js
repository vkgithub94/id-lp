import _extends from "reshow-runtime/es/helpers/extends";
import _defineProperty from "reshow-runtime/es/helpers/defineProperty";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";
import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _possibleConstructorReturn from "reshow-runtime/es/helpers/possibleConstructorReturn";
import _getPrototypeOf from "reshow-runtime/es/helpers/getPrototypeOf";
import _inherits from "reshow-runtime/es/helpers/inherits";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

import React, { Component } from 'react';
/**
 * Production please use
 * import {xxx} from 'organism-react-scroll-nav';
 */

import { ScrollSpy, ScrollReceiver, SmoothScrollLink, scrollDispatch } from "../../src/index";
/*Test only*/

scrollDispatch({
  scrollMargin: 100
});
import { reactStyle, injectStyle } from 'react-atomic-molecule';

var MenuItem =
/*#__PURE__*/
function (_Component) {
  _inherits(MenuItem, _Component);

  function MenuItem() {
    _classCallCheck(this, MenuItem);

    return _possibleConstructorReturn(this, _getPrototypeOf(MenuItem).apply(this, arguments));
  }

  _createClass(MenuItem, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          targetInfo = _this$props.targetInfo,
          style = _this$props.style,
          reset = _objectWithoutProperties(_this$props, ["targetInfo", "style"]);

      var activeStyle = null;

      if (targetInfo.active) {
        activeStyle = Styles.active;
      }

      return React.createElement("div", _extends({
        style: _objectSpread({}, Styles.link, {}, style, {}, activeStyle)
      }, reset));
    }
  }]);

  return MenuItem;
}(Component);

var _ref =
/*#__PURE__*/
React.createElement(MenuItem, null);

var _ref2 =
/*#__PURE__*/
React.createElement(MenuItem, null);

var _ref3 =
/*#__PURE__*/
React.createElement(MenuItem, null);

var Index =
/*#__PURE__*/
function (_Component2) {
  _inherits(Index, _Component2);

  function Index() {
    _classCallCheck(this, Index);

    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));
  }

  _createClass(Index, [{
    key: "render",
    value: function render() {
      return React.createElement("div", null, React.createElement("div", {
        id: "nav-parent",
        style: Styles.nav
      }, React.createElement(SmoothScrollLink, {
        scrollRefId: "nav-parent",
        container: _ref,
        targetId: "t1",
        style: {
          background: '#3498DB'
        }
      }, "test1"), React.createElement(SmoothScrollLink, {
        scrollRefId: "nav-parent",
        container: _ref2,
        targetId: "t2",
        style: {
          background: '#F1C40F'
        }
      }, "test2"), React.createElement(SmoothScrollLink, {
        scrollRefId: "nav-parent",
        container: _ref3,
        targetId: "t3",
        style: {
          background: '#2ECC71'
        }
      }, "test3")), React.createElement("div", {
        style: {
          paddingTop: 66
        }
      }, React.createElement(ScrollSpy, {
        id: "t1",
        style: _objectSpread({}, Styles.content, {
          background: "#3498DB"
        })
      }, "test111"), React.createElement(ScrollSpy, {
        id: "t2",
        style: _objectSpread({}, Styles.content, {
          background: "#F1C40F"
        })
      }, React.createElement(ScrollSpy, {
        monitorScroll: false
      }, React.createElement(ScrollReceiver, {
        style: {
          border: "1px solid #fff"
        }
      }, "test222"))), React.createElement(ScrollSpy, {
        id: "t3",
        style: _objectSpread({}, Styles.content, {
          background: "#2ECC71"
        })
      }, "test333")));
    }
  }]);

  return Index;
}(Component);

export default Index;
var Styles = {
  content: {
    height: "500px",
    textAlign: "center",
    paddingTop: "10%",
    fontSize: "4rem",
    color: "#fff"
  },
  link: {
    display: "inline-block",
    padding: "0.3rem 0.5rem",
    fontSize: "2rem",
    color: "#fff",
    marginRight: "10px",
    opacity: "0.5",
    cursor: "pointer"
  },
  active: {
    opacity: 1
  },
  body: reactStyle({
    margin: 0,
    padding: 0
  }, 'body'),
  nav: {
    position: 'fixed',
    background: '#fff',
    textAlign: 'center',
    width: "100%",
    padding: "10px 0",
    top: 0
  }
};
injectStyle();