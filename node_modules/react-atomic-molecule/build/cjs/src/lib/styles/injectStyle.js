"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.reInjectStyle = void 0;

var _defineProperty2 = _interopRequireDefault(require("reshow-runtime/helpers/defineProperty"));

var _winDoc = require("win-doc");

var _store = _interopRequireDefault(require("./store.js"));

var _stylesToCSS = _interopRequireDefault(require("./stylesToCSS"));

var _createEl = require("create-el");

var _cssQuerySelector = _interopRequireDefault(require("css-query-selector"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var reInjectStyle = function reInjectStyle() {
  _store["default"].newStyles = Object.values(_store["default"].registry);
  injectStyle();
};

exports.reInjectStyle = reInjectStyle;
var keys = Object.keys;

var appendCss = function appendCss(cssArr) {
  keys(cssArr).forEach(function (key) {
    var id = 'react-style-' + key;

    var styleDom = _cssQuerySelector["default"].one('#' + id);

    var css = cssArr[key];

    if (styleDom) {
      styleDom.innerHTML = css;
    } else {
      styleDom = (0, _createEl.create)('style')()({
        id: id,
        innerHTML: css
      });
      (0, _createEl.inject)(function () {
        return (0, _winDoc.doc)().getElementsByTagName('head')[0];
      })(styleDom);
    }
  });
};

var injectStyle = function injectStyle() {
  if (!_store["default"].newStyles.length) {
    // We are in Node or Styles are already injected
    return null;
  }

  var compiled = (0, _stylesToCSS["default"])(_store["default"].newStyles);
  _store["default"].newStyles = [];
  _store["default"].registry = _objectSpread({}, _store["default"].registry, {}, compiled.styleIds);

  if (compiled.css) {
    if ((0, _winDoc.doc)().URL) {
      appendCss(compiled.cssArr);
    } else {
      console.log(compiled.css);
    }
  }
};

var _default = injectStyle;
exports["default"] = _default;