"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CHANGE = exports["default"] = void 0;

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("reshow-runtime/helpers/defineProperty"));

var _mitt = _interopRequireDefault(require("./mitt"));

var CHANGE = 'chg';
exports.CHANGE = CHANGE;

var Store =
/*#__PURE__*/
function () {
  (0, _createClass2["default"])(Store, [{
    key: "reduce",
    value: function reduce() {
      console.error('Not override reduce().');
    }
  }, {
    key: "getInitialState",
    value: function getInitialState() {
      console.error('Not override getInitialState().');
    }
  }, {
    key: "equals",
    value: function equals(one, two) {
      return one === two;
    }
  }]);

  function Store(dispatcher) {
    var _this = this;

    (0, _classCallCheck2["default"])(this, Store);
    (0, _defineProperty2["default"])(this, "__invokeOnDispatch", function (action) {
      var startingState = _this._state;

      var endingState = _this.reduce(startingState, action);

      if (endingState === undefined) {
        console.error('reduce() return undefined.');
      }

      if (!_this.equals(startingState, endingState)) {
        _this._state = endingState;

        _this.emit(CHANGE);
      }

      var next = _this.nextEmits.slice(0);

      _this.nextEmits = [];
      next.forEach(function (emit) {
        return _this.emit(emit);
      });
    });
    (0, _defineProperty2["default"])(this, "emit", function (e) {
      return _this.mitt.emit(e);
    });
    (0, _defineProperty2["default"])(this, "addListener", function (listener, e) {
      return _this.mitt.on(e, listener);
    });
    (0, _defineProperty2["default"])(this, "removeListener", function (listener, e) {
      return _this.mitt.off(e, listener);
    });
    dispatcher.register(this.__invokeOnDispatch);
    this._state = this.reset();
  }

  (0, _createClass2["default"])(Store, [{
    key: "reset",
    value: function reset() {
      this.mitt = new _mitt["default"]();
      this.nextEmits = [];
      return this.getInitialState();
    }
  }, {
    key: "getState",
    value: function getState() {
      return this._state;
    }
    /* Following not extendable */

  }]);
  return Store;
}();

var _default = Store;
exports["default"] = _default;