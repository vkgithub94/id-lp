"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectWithoutProperties2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutProperties"));

var _react = _interopRequireWildcard(require("react"));

var Atoms = _interopRequireWildcard(require("react-atomic-atom"));

var _getObjectValue = _interopRequireDefault(require("get-object-value"));

var _ucfirst = _interopRequireDefault(require("ucfirst"));

var _injectStyle = _interopRequireDefault(require("../../src/lib/styles/injectStyle"));

var _bindStyles = _interopRequireDefault(require("../../src/lib/styles/bindStyles"));

var _classLib = require("class-lib");

/* jshint esnext: true */
var keys = Object.keys;

var getChildren = function getChildren(render, children) {
  if (!render) {
    return null;
  }
  /**
   * Hack for https://fb.me/react-warning-keys
   * Each child in an array or iterator should have a unique "key"
   */


  return _react.Children.map(children, function (c) {
    return c;
  });
};

var SemanticUI = function SemanticUI(_ref) {
  var atom = _ref.atom,
      children = _ref.children,
      renderChildren = _ref.renderChildren,
      styles = _ref.styles,
      styleOrder = _ref.styleOrder,
      ui = _ref.ui,
      others = (0, _objectWithoutProperties2["default"])(_ref, ["atom", "children", "renderChildren", "styles", "styleOrder", "ui"]);
  var component;

  switch (atom) {
    case 'null':
      return null;

    case 'input':
      component = Atoms.Input;
      renderChildren = false;
      break;

    case 'img':
      component = Atoms.Img;
      renderChildren = false;
      break;

    case 'path':
      component = Atoms.Path;
      renderChildren = false;
      ui = false;
      break;

    default:
      component = (0, _getObjectValue["default"])(Atoms, [(0, _ucfirst["default"])(atom || '')], function () {
        return Atoms.Div;
      });
      break;
  }

  var className = others.className,
      style = others.style; // bindStyles need after inject

  var bindProps = {};

  if (styles) {
    // Need avoid props pass by ref !!important!!
    (0, _injectStyle["default"])();
    bindProps = (0, _bindStyles["default"])({
      className: className,
      style: style,
      styles: styles,
      styleOrder: styleOrder
    });
  }

  keys(bindProps).forEach(function (key) {
    return others[key] = bindProps[key];
  });

  if (ui) {
    // others.className maybe effect by bindProps, so use it here.
    others.className = (0, _classLib.mixClass)(others.className, 'ui');
  }

  return (0, _react.createElement)(component, others, getChildren(renderChildren, children));
};

SemanticUI.defaultProps = {
  ui: true,
  renderChildren: true
};
var _default = SemanticUI;
exports["default"] = _default;
module.exports = exports.default;