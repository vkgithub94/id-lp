{"version":3,"sources":["useNavigationBuilder.tsx"],"names":["PrivateValueStore","isArrayEqual","a","b","length","every","it","index","getRouteConfigsFromChildren","children","configs","React","Children","toArray","reduce","acc","child","isValidElement","type","Screen","push","props","Fragment","Error","name","String","process","env","NODE_ENV","forEach","config","component","JSON","stringify","undefined","console","warn","useNavigationBuilder","createRouter","options","route","useContext","NavigationRouteContext","previousRouteRef","useRef","useEffect","current","rest","params","screen","initialRouteName","router","screens","curr","routeNames","Object","keys","routeParamList","initialParams","initialParamsFromParams","isStateValid","useCallback","state","isStateInitialized","stale","NavigationStateContext","currentState","getCurrentState","getState","setState","key","performTransaction","previousStateRef","initializedStateRef","getInitialState","getRehydratedState","nextState","getStateForRouteNamesChange","updatedState","getStateForAction","emitter","emit","data","actionListeners","listeners","addActionListener","addListener","focusedListeners","addFocusedListener","getStateForRoute","addStateGetter","onAction","routerConfigOptions","onRouteFocus","navigation","descriptors","screenOptions"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { isValidElementType } from 'react-is';\nimport { NavigationStateContext } from './BaseNavigationContainer';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport Screen from './Screen';\nimport { navigate } from './CommonActions';\nimport useEventEmitter from './useEventEmitter';\nimport useRegisterNavigator from './useRegisterNavigator';\nimport useDescriptors from './useDescriptors';\nimport useNavigationHelpers from './useNavigationHelpers';\nimport useOnAction from './useOnAction';\nimport useFocusEvents from './useFocusEvents';\nimport useOnRouteFocus from './useOnRouteFocus';\nimport useChildActionListeners from './useChildActionListeners';\nimport useFocusedListeners from './useFocusedListeners';\nimport useFocusedListenersChildrenAdapter from './useFocusedListenersChildrenAdapter';\nimport {\n  DefaultRouterOptions,\n  DefaultNavigatorOptions,\n  NavigationState,\n  ParamListBase,\n  RouteConfig,\n  Router,\n  RouterFactory,\n  PartialState,\n  PrivateValueStore,\n  NavigationAction,\n} from './types';\nimport useStateGetters from './useStateGetters';\nimport useOnGetState from './useOnGetState';\n\n// This is to make TypeScript compiler happy\n// eslint-disable-next-line babel/no-unused-expressions\nPrivateValueStore;\n\ntype NavigatorRoute = {\n  params?: {\n    screen?: string;\n    params?: object;\n  };\n};\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\n/**\n * Extract route config object from React children elements.\n *\n * @param children React Elements to extract the config from.\n */\nconst getRouteConfigsFromChildren = <ScreenOptions extends object>(\n  children: React.ReactNode\n) => {\n  const configs = React.Children.toArray(children).reduce<\n    RouteConfig<ParamListBase, string, ScreenOptions>[]\n  >((acc, child) => {\n    if (React.isValidElement(child)) {\n      if (child.type === Screen) {\n        // We can only extract the config from `Screen` elements\n        // If something else was rendered, it's probably a bug\n        acc.push(\n          child.props as RouteConfig<ParamListBase, string, ScreenOptions>\n        );\n        return acc;\n      }\n\n      if (child.type === React.Fragment) {\n        // When we encounter a fragment, we need to dive into its children to extract the configs\n        // This is handy to conditionally define a group of screens\n        acc.push(\n          ...getRouteConfigsFromChildren<ScreenOptions>(child.props.children)\n        );\n        return acc;\n      }\n    }\n\n    throw new Error(\n      `A navigator can only contain 'Screen' components as its direct children (found '${\n        // @ts-ignore\n        child.type && child.type.name ? child.type.name : String(child)\n      }')`\n    );\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    configs.forEach(config => {\n      const { name, children, component } = config as any;\n\n      if (typeof name !== 'string' || !name) {\n        throw new Error(\n          `Got an invalid name (${JSON.stringify(\n            name\n          )}) for the screen. It must be a non-empty string.`\n        );\n      }\n\n      if (children != null || component !== undefined) {\n        if (children != null && component !== undefined) {\n          throw new Error(\n            `Got both 'component' and 'children' props for the screen '${name}'. You must pass only one of them.`\n          );\n        }\n\n        if (children != null && typeof children !== 'function') {\n          throw new Error(\n            `Got an invalid value for 'children' prop for the screen '${name}'. It must be a function returning a React Element.`\n          );\n        }\n\n        if (component !== undefined && !isValidElementType(component)) {\n          throw new Error(\n            `Got an invalid value for 'component' prop for the screen '${name}'. It must be a a valid React Component.`\n          );\n        }\n\n        if (typeof component === 'function' && component.name === 'component') {\n          // Inline anonymous functions passed in the `component` prop will have the name of the prop\n          // It's relatively safe to assume that it's not a component since it should also have PascalCase name\n          // We won't catch all scenarios here, but this should catch a good chunk of incorrect use.\n          console.warn(\n            `Looks like you're passing an inline function for 'component' prop for the screen '${name}' (e.g. component={() => <SomeComponent />}). Passing an inline function will cause the component state to be lost on re-render and cause perf issues since it's re-created every render. You can pass the function as children to 'Screen' instead to achieve the desired behaviour.`\n          );\n        }\n      } else {\n        throw new Error(\n          `Couldn't find a 'component' or 'children' prop for the screen '${name}'. This can happen if you passed 'undefined'. You likely forgot to export your component from the file it's defined in, or mixed up default import and named import when importing.`\n        );\n      }\n    });\n  }\n\n  return configs;\n};\n\n/**\n * Hook for building navigators.\n *\n * @param createRouter Factory method which returns router object.\n * @param options Options object containing `children` and additional options for the router.\n * @returns An object containing `state`, `navigation`, `descriptors` objects.\n */\nexport default function useNavigationBuilder<\n  State extends NavigationState,\n  RouterOptions extends DefaultRouterOptions,\n  ScreenOptions extends object,\n  EventMap extends Record<string, any>\n>(\n  createRouter: RouterFactory<State, any, RouterOptions>,\n  options: DefaultNavigatorOptions<ScreenOptions> & RouterOptions\n) {\n  useRegisterNavigator();\n\n  const route = React.useContext(NavigationRouteContext) as\n    | NavigatorRoute\n    | undefined;\n\n  const previousRouteRef = React.useRef(route);\n\n  React.useEffect(() => {\n    previousRouteRef.current = route;\n  }, [route]);\n\n  const { children, ...rest } = options;\n  const { current: router } = React.useRef<Router<State, any>>(\n    createRouter({\n      ...((rest as unknown) as RouterOptions),\n      ...(route?.params && typeof route.params.screen === 'string'\n        ? { initialRouteName: route.params.screen }\n        : null),\n    })\n  );\n\n  const screens = getRouteConfigsFromChildren<ScreenOptions>(children).reduce<\n    Record<string, RouteConfig<ParamListBase, string, ScreenOptions>>\n  >((acc, curr) => {\n    if (curr.name in acc) {\n      throw new Error(\n        `A navigator cannot contain multiple 'Screen' components with the same name (found duplicate screen named '${curr.name}')`\n      );\n    }\n\n    acc[curr.name] = curr;\n    return acc;\n  }, {});\n\n  const routeNames = Object.keys(screens);\n  const routeParamList = routeNames.reduce<Record<string, object | undefined>>(\n    (acc, curr) => {\n      const { initialParams } = screens[curr];\n      const initialParamsFromParams =\n        route?.params && route.params.screen === curr\n          ? route.params.params\n          : undefined;\n\n      acc[curr] =\n        initialParams !== undefined || initialParamsFromParams !== undefined\n          ? {\n              ...initialParams,\n              ...initialParamsFromParams,\n            }\n          : undefined;\n\n      return acc;\n    },\n    {}\n  );\n\n  if (!routeNames.length) {\n    throw new Error(\n      \"Couldn't find any screens for the navigator. Have you defined any screens as its children?\"\n    );\n  }\n\n  const isStateValid = React.useCallback(\n    state => state.type === undefined || state.type === router.type,\n    [router.type]\n  );\n\n  const isStateInitialized = React.useCallback(\n    state =>\n      state !== undefined && state.stale === false && isStateValid(state),\n    [isStateValid]\n  );\n\n  const {\n    state: currentState,\n    getState: getCurrentState,\n    setState,\n    key,\n    performTransaction,\n  } = React.useContext(NavigationStateContext);\n\n  const previousStateRef = React.useRef<\n    NavigationState | PartialState<NavigationState> | undefined\n  >();\n  const initializedStateRef = React.useRef<State>();\n\n  if (\n    initializedStateRef.current === undefined ||\n    currentState !== previousStateRef.current\n  ) {\n    // If the current state isn't initialized on first render, we initialize it\n    // We also need to re-initialize it if the state passed from parent was changed (maybe due to reset)\n    // Otherwise assume that the state was provided as initial state\n    // So we need to rehydrate it to make it usable\n    initializedStateRef.current =\n      currentState === undefined || !isStateValid(currentState)\n        ? router.getInitialState({\n            routeNames,\n            routeParamList,\n          })\n        : router.getRehydratedState(currentState as PartialState<State>, {\n            routeNames,\n            routeParamList,\n          });\n  }\n\n  React.useEffect(() => {\n    previousStateRef.current = currentState;\n  }, [currentState]);\n\n  let state =\n    // If the state isn't initialized, or stale, use the state we initialized instead\n    // The state won't update until there's a change needed in the state we have initalized locally\n    // So it'll be `undefined` or stale untill the first navigation event happens\n    isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n\n  let nextState: State = state;\n\n  if (!isArrayEqual(state.routeNames, routeNames)) {\n    // When the list of route names change, the router should handle it to remove invalid routes\n    nextState = router.getStateForRouteNamesChange(state, {\n      routeNames,\n      routeParamList,\n    });\n  }\n\n  if (\n    previousRouteRef.current &&\n    route &&\n    route.params &&\n    typeof route.params.screen === 'string' &&\n    route.params !== previousRouteRef.current.params\n  ) {\n    // If the route was updated with new name and/or params, we should navigate there\n    // The update should be limited to current navigator only, so we call the router manually\n    const updatedState = router.getStateForAction(\n      state,\n      navigate(route.params.screen, route.params.params),\n      {\n        routeNames,\n        routeParamList,\n      }\n    );\n\n    nextState =\n      updatedState !== null\n        ? router.getRehydratedState(updatedState, {\n            routeNames,\n            routeParamList,\n          })\n        : state;\n  }\n\n  if (state !== nextState) {\n    // If the state needs to be updated, we'll schedule an update with React\n    // setState in render seems hacky, but that's how React docs implement getDerivedPropsFromState\n    // https://reactjs.org/docs/hooks-faq.html#how-do-i-implement-getderivedstatefromprops\n    performTransaction(() => {\n      setState(nextState);\n    });\n  }\n\n  // The up-to-date state will come in next render, but we don't need to wait for it\n  // We can't use the outdated state since the screens have changed, which will cause error due to mismatched config\n  // So we override the state objec we return to use the latest state as soon as possible\n  state = nextState;\n\n  React.useEffect(() => {\n    return () => {\n      // We need to clean up state for this navigator on unmount\n      performTransaction(\n        () => getCurrentState() !== undefined && setState(undefined)\n      );\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getState = React.useCallback((): State => {\n    const currentState = getCurrentState();\n\n    return isStateInitialized(currentState)\n      ? (currentState as State)\n      : (initializedStateRef.current as State);\n  }, [getCurrentState, isStateInitialized]);\n\n  const emitter = useEventEmitter();\n\n  useFocusEvents({ state, emitter });\n\n  React.useEffect(() => {\n    emitter.emit({ type: 'state', data: { state } });\n  }, [emitter, state]);\n\n  const {\n    listeners: actionListeners,\n    addListener: addActionListener,\n  } = useChildActionListeners();\n\n  const {\n    listeners: focusedListeners,\n    addListener: addFocusedListener,\n  } = useFocusedListeners();\n\n  const { getStateForRoute, addStateGetter } = useStateGetters();\n\n  const onAction = useOnAction({\n    router,\n    getState,\n    setState,\n    key,\n    listeners: actionListeners,\n    routerConfigOptions: {\n      routeNames,\n      routeParamList,\n    },\n  });\n\n  const onRouteFocus = useOnRouteFocus({\n    router,\n    key,\n    getState,\n    setState,\n  });\n\n  const navigation = useNavigationHelpers<State, NavigationAction, EventMap>({\n    onAction,\n    getState,\n    emitter,\n    router,\n  });\n\n  useFocusedListenersChildrenAdapter({\n    navigation,\n    focusedListeners,\n  });\n\n  useOnGetState({\n    getState,\n    getStateForRoute,\n  });\n\n  const descriptors = useDescriptors<State, ScreenOptions>({\n    state,\n    screens,\n    navigation,\n    screenOptions: options.screenOptions,\n    onAction,\n    getState,\n    setState,\n    onRouteFocus,\n    addActionListener,\n    addFocusedListener,\n    addStateGetter,\n    router,\n    emitter,\n  });\n\n  return {\n    state,\n    navigation,\n    descriptors,\n  };\n}\n"]}