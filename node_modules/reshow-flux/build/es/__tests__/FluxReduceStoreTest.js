'use strict';

import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _possibleConstructorReturn from "reshow-runtime/es/helpers/possibleConstructorReturn";
import _getPrototypeOf from "reshow-runtime/es/helpers/getPrototypeOf";
import _inherits from "reshow-runtime/es/helpers/inherits";
import { Dispatcher, ReduceStore } from '../index';
import { expect } from 'chai';
describe('Test Store', function () {
  var FakeStore =
  /*#__PURE__*/
  function (_ReduceStore) {
    _inherits(FakeStore, _ReduceStore);

    function FakeStore() {
      _classCallCheck(this, FakeStore);

      return _possibleConstructorReturn(this, _getPrototypeOf(FakeStore).apply(this, arguments));
    }

    _createClass(FakeStore, [{
      key: "getInitialState",
      value: function getInitialState() {
        return [];
      }
    }, {
      key: "reduce",
      value: function reduce(state, action) {
        return action;
      }
    }]);

    return FakeStore;
  }(ReduceStore);

  it('could register with dispatcher', function () {
    var dispatcher = new Dispatcher();
    var store = new FakeStore(dispatcher);
    var action = {
      aaa: 'bbb'
    };
    dispatcher.dispatch(action);
    var state = store.getState();
    expect(state).to.equal(action);
  });
  it('dispatch with empty', function () {
    var dispatcher = new Dispatcher();
    var store = new FakeStore(dispatcher);
    dispatcher.dispatch();
    var state = store.getState();
    expect(state).to.be.empty;
  });
});