"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _objectWithoutProperties2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("reshow-runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("reshow-runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("reshow-runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _chai = require("chai");

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

var _index = _interopRequireDefault(require("../index"));

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact["default"]()
});

var _ref =
/*#__PURE__*/
_react["default"].createElement("div", null, "foo");

var _ref2 =
/*#__PURE__*/
_react["default"].createElement("div", {
  id: "1",
  key: "0"
});

var _ref3 =
/*#__PURE__*/
_react["default"].createElement("div", {
  id: "2",
  key: "1"
});

var _ref7 =
/*#__PURE__*/
_react["default"].createElement("div", null, "1");

var _ref8 =
/*#__PURE__*/
_react["default"].createElement("div", null, "2");

var _ref10 =
/*#__PURE__*/
_react["default"].createElement("div", null, 'foo');

var _ref11 =
/*#__PURE__*/
_react["default"].createElement("div", null, 'bar');

var _ref13 =
/*#__PURE__*/
_react["default"].createElement("div", null);

var _ref14 =
/*#__PURE__*/
_react["default"].createElement("div", null);

var _ref17 =
/*#__PURE__*/
_react["default"].createElement("div", null, 'foo');

var _ref18 =
/*#__PURE__*/
_react["default"].createElement("div", null, 'bar');

var _ref21 =
/*#__PURE__*/
_react["default"].createElement("div", null);

var _ref22 =
/*#__PURE__*/
_react["default"].createElement("div", null);

describe('Test build', function () {
  it('test function', function () {
    var func = function func(props) {
      (0, _chai.expect)(props.foo).to.equal('bar');
    };

    (0, _index["default"])(func)({
      foo: 'bar'
    });
  });
  it('test function with error', function () {
    var run = function run() {
      (0, _index["default"])(function (props) {
        (0, _chai.expect)(props.foo).to.equal('bar111');
      })({
        foo: 'bar'
      });
    };

    (0, _chai.expect)(run).to["throw"]();
  });
  it('test function with return', function () {
    var a = (0, _index["default"])(function (props) {
      return props.foo;
    })({
      foo: 'barbar'
    });
    (0, _chai.expect)(a).to.equal('barbar');
  });
  it('test with stateless function return', function () {
    var func = function func(props) {
      return _react["default"].createElement("div", props);
    };

    var a = (0, _index["default"])(func)({
      foo: 'barbar'
    }); // will return react instance

    (0, _chai.expect)(a.props.foo).to.equal('barbar');
    (0, _chai.expect)((0, _react.isValidElement)(a)).to.be["true"];
  });
  it('test function return another component', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_PureComponent) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.props.foo);
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var func = function func(props) {
      return _react["default"].createElement(FakeComponent, props);
    };

    var vDom = (0, _index["default"])(func)({
      foo: 'bar3'
    });
    var html = (0, _enzyme.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal('<div>bar3</div>');
  });
  it('test with component', function () {
    var FakeComponent = function FakeComponent(props) {
      return _react["default"].createElement("div", null, props.foo);
    };

    var vDom = (0, _index["default"])(FakeComponent)({
      foo: 'bar'
    });
    var html = (0, _enzyme.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal('<div>bar</div>');
  });
  it('test with instance', function () {
    var FakeComponent = function FakeComponent(props) {
      return _react["default"].createElement("div", null, props.foo);
    };

    var vDom = _react["default"].createElement(FakeComponent, null);

    var html = (0, _enzyme.shallow)((0, _index["default"])(vDom)({
      foo: 'bar1'
    })).html();
    (0, _chai.expect)(html).to.equal('<div>bar1</div>');
  });
  it('test with class component', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_PureComponent2) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent2);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.props.foo);
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var vDom = (0, _index["default"])(FakeComponent)({
      foo: 'bar2'
    });
    var html = (0, _enzyme.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal('<div>bar2</div>');
  });
  it('test with clone and child', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_PureComponent3) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent3);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          var _this$props = this.props,
              comp = _this$props.comp,
              others = (0, _objectWithoutProperties2["default"])(_this$props, ["comp"]);
          return (0, _index["default"])(comp)(others, 'bar');
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var html = (0, _enzyme.shallow)(_react["default"].createElement(FakeComponent, {
      id: "foo",
      comp: _ref
    })).html();
    (0, _chai.expect)(html).to.equal('<div id="foo">bar</div>');
  });
  it('test with func and child', function () {
    var result = (0, _index["default"])(function (props) {
      return props;
    })({
      foo: 'bar'
    }, 'hello child');
    (0, _chai.expect)(result.children).to.equal('hello child');
    (0, _chai.expect)(result.foo).to.equal('bar');
  });
  it('test with anonymous func and child', function () {
    var child = [_ref2, _ref3];
    var buildDom = (0, _index["default"])(function (_ref4) {
      var children = _ref4.children;
      return _react["default"].createElement("div", {
        id: "root"
      }, children);
    })({}, child);
    var html = (0, _enzyme.shallow)(_react["default"].createElement("div", null, buildDom)).html();

    var stateFunc = function stateFunc(_ref5) {
      var children = _ref5.children;
      return _react["default"].createElement("div", {
        id: "root"
      }, children);
    };

    var stateFuncBuildDom = (0, _index["default"])(stateFunc)({}, child);
    var stateFuncHtml = (0, _enzyme.shallow)(_react["default"].createElement("div", null, stateFuncBuildDom)).html();
    var expected = '<div><div id="root"><div id="1"></div><div id="2"></div></div></div>';
    (0, _chai.expect)(html).to.equal(expected);
    (0, _chai.expect)(stateFuncHtml).to.equal(expected);
  });
  it('test with class and child', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_PureComponent4) {
      (0, _inherits2["default"])(FakeComponent, _PureComponent4);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", this.props);
        }
      }]);
      return FakeComponent;
    }(_react.PureComponent);

    var vDom = (0, _index["default"])(FakeComponent)({
      id: 'foo'
    }, 'hello');
    var html = (0, _enzyme.shallow)(vDom).html();
    (0, _chai.expect)(html).to.equal('<div id="foo">hello</div>');
  });
  it('test with empty', function () {
    var result = (0, _index["default"])()();
    (0, _chai.expect)(result).to.be["null"];
  });
  it('test with multi children', function () {
    var FakeDom = function FakeDom(_ref6) {
      var children = _ref6.children;
      return _react["default"].createElement("div", null, (0, _index["default"])(children)({
        title: 'foo'
      }));
    };

    var vDom = _react["default"].createElement(FakeDom, null, _ref7, _ref8);

    var wrap = (0, _enzyme.shallow)(vDom);
    (0, _chai.expect)(wrap.html()).to.equal('<div><div title="foo">1</div><div title="foo">2</div></div>');
  });
  it('test with multi function', function () {
    var FakeDom = function FakeDom(_ref9) {
      var children = _ref9.children;
      (0, _chai.expect)(_react.Children.count(children)).to.equal(2);
      return _react["default"].createElement("div", null, (0, _index["default"])(children)({
        foo: _ref10,
        bar: _ref11
      }));
    };

    var vDom = _react["default"].createElement(FakeDom, null, function (_ref12) {
      var foo = _ref12.foo;
      return foo;
    }, _ref13, _ref14, function (_ref15) {
      var bar = _ref15.bar;
      return bar;
    });

    var wrap = (0, _enzyme.shallow)(vDom);
    (0, _chai.expect)(wrap.html()).to.equal('<div><div>foo</div><div foo="[object Object]" bar="[object Object]"></div><div foo="[object Object]" bar="[object Object]"></div><div>bar</div></div>');
  });
  it('test with multi Component instance', function () {
    var FakeDom = function FakeDom(_ref16) {
      var children = _ref16.children;
      (0, _chai.expect)(_react.Children.count(children)).to.equal(2);
      return _react["default"].createElement("div", null, (0, _index["default"])(children)({
        foo: _ref17,
        bar: _ref18
      }));
    };

    var A = function A(_ref19) {
      var foo = _ref19.foo;
      return foo;
    };

    var B = function B(_ref20) {
      var bar = _ref20.bar;
      return bar;
    };

    var vDom = _react["default"].createElement(FakeDom, null, A, _ref21, _ref22, B);

    var wrap = (0, _enzyme.shallow)(vDom);
    (0, _chai.expect)(wrap.html()).to.equal('<div><div>foo</div><div foo="[object Object]" bar="[object Object]"></div><div foo="[object Object]" bar="[object Object]"></div><div>bar</div></div>');
  });
});