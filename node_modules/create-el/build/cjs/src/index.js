"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.remove = exports.create = exports.inject = exports.css = exports.js = void 0;

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _winDoc = require("win-doc");

var _callFunc = _interopRequireDefault(require("call-func"));

var keys = Object.keys;

var inject = function inject(base, isPrepend) {
  return function (dNode) {
    base = (0, _callFunc["default"])(base);

    if (base && (base.nodeName === 'BODY' || base.nodeName === 'HEAD')) {
      if (isPrepend && base.firstChild) {
        base.insertBefore(dNode, base.firstChild);
        return;
      } else {
        base.appendChild(dNode);
        return;
      }
    } else {
      var d = (0, _winDoc.doc)();

      if (!base) {
        base = d.currentScript ? d.currentScript : d.body;
      }

      var parentNode = base.parentNode;

      if (parentNode) {
        if (!isPrepend) {
          if (base.nextSibling) {
            parentNode.insertBefore(dNode, base.nextSibling);
            return;
          } else {
            parentNode.appendChild(dNode);
            return;
          }
        } else {
          parentNode.insertBefore(dNode, base);
          return;
        }
      }

      d.body.appendChild(dNode);
    }
  };
};

exports.inject = inject;

var create = function create(tag) {
  return function (callback) {
    return function (attrs) {
      var d = (0, _winDoc.doc)();

      if (d.createElement) {
        var dNode = d.createElement(tag);

        if (attrs) {
          keys(attrs).forEach(function (key) {
            return dNode[key] = attrs[key];
          });
        }

        if (callback) {
          dNode.onreadystatechange = dNode.onload = function () {
            var readyState = dNode.readyState;

            if (!readyState || -1 !== '|loaded|complete|'.indexOf('|' + readyState + '|')) {
              setTimeout(callback);
            }
          };
        }

        return dNode;
      }
    };
  };
};

exports.create = create;

var remove = function remove(dNode) {
  if (dNode) {
    try {
      dNode.parentNode.removeChild(dNode);
      dNode = null;
    } catch (e) {}
  }
};

exports.remove = remove;

var js = function js(base, isPrepend) {
  return function (callback) {
    return function (url, attrs) {
      var dNode = create('script')(callback)(attrs);

      if (base) {
        inject(base, isPrepend)(dNode);
      }

      dNode.src = url;
      return dNode;
    };
  };
};

exports.js = js;

var css = function css(base, isPrepend) {
  return function (callback) {
    return function (url, attrs) {
      var dNode = create('link')(callback)((0, _objectSpread2["default"])({
        rel: 'stylesheet',
        type: 'text/css'
      }, attrs));

      if (base) {
        inject(base, isPrepend)(dNode);
      }

      dNode.href = url;
      return dNode;
    };
  };
};

exports.css = css;