import { STRING, OBJECT, FUNCTION, UNDEFINED } from 'reshow-constant';
var types = '|number|boolean|' + STRING + '|' + OBJECT + '|' + FUNCTION + '|' + UNDEFINED + '|';
/**
 * Do not use this.
 * The class name not reliable after code compress.
 */

var toBase = function toBase(type, name) {
  if (-1 === types.indexOf('|' + type + '|')) {
    if (!name) {
      name = type;
    }

    return name;
  } else {
    return type;
  }
};

var getTypeIs = function getTypeIs(val, name) {
  var type = Object.prototype.toString.call(val).replace(/^\[object\s(.*)\]$/, '$1').toLowerCase();
  return toBase(type, name);
};

var getTypeOf = function getTypeOf(val, name) {
  if (null == val) {
    return getTypeIs(val, name);
  }

  try {
    var type = Object.getPrototypeOf(val).constructor.name.toLowerCase();
    return toBase(type, name);
  } catch (ex) {
    return getTypeIs(val, name);
  }
};

export default getTypeOf;