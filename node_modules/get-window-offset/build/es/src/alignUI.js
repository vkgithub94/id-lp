import getOffset from 'getoffset';
import getScrollInfo from 'get-scroll-info';
import get from 'get-object-value';
import getAfterMove from './getAfterMove';
import getWindowOffset from './getWindowOffset';
import alignWith from './alignWith';
import isFullOnScreen from './isFullOnScreen';
import isSetOverflow from './isSetOverflow';
import isFixed from './isFixed';
import pos from './positions';

var getAlignWithLoc = function getAlignWithLoc(toLoc) {
  var loc;

  switch (toLoc) {
    case pos.TL:
      loc = pos.TR;
      break;

    case pos.TR:
      loc = pos.TL;
      break;

    case pos.BL:
      loc = pos.BR;
      break;

    case pos.BR:
      loc = pos.BL;
      break;

    default:
      loc = toLoc;
      break;
  }

  return loc;
};

var fixFixedNode = function fixFixedNode(scrollInfo) {
  return function (move) {
    return [move[0] + scrollInfo.left, move[1] + scrollInfo.top];
  };
};

var fixScrollNode = function fixScrollNode(scrollInfo) {
  return function (move) {
    return [move[0] - scrollInfo.left, move[1] - scrollInfo.top];
  };
};

var alignUI = function alignUI(targetEl, floatEl, alignParams, winInfo) {
  var _get = get(alignParams, null, {}),
      toLoc = _get.toLoc,
      disableAutoLoc = _get.disableAutoLoc;

  if (!targetEl) {
    console.error('targetEl was empty');
    console.trace();
    return false;
  }

  var targetInfo;
  var locs = [];

  if (toLoc) {
    locs.push(toLoc);
  }

  if (!disableAutoLoc) {
    winInfo = winInfo || getWindowOffset(targetEl);

    if (!winInfo) {
      console.error('get windows offset failed');
    } else {
      locs = locs.concat(winInfo.locs);
    }
  }

  if (!locs.length) {
    console.error('Not set any locs', toLoc);
    return;
  }

  if (!targetInfo) {
    if (winInfo) {
      targetInfo = winInfo.domInfo;
    } else {
      var targetFixedNode = isFixed(targetEl);
      targetInfo = getOffset(targetEl, targetFixedNode);
      targetInfo.scrollNode = isSetOverflow(targetEl);
      targetInfo.fixedNode = targetFixedNode;
    }
  }

  var floatInfo = getOffset(floatEl);
  var adjustMove;
  var scrollNode = targetInfo.scrollNode;
  var fixedNode = targetInfo.fixedNode;

  if (fixedNode) {
    if (fixedNode.contains(floatEl)) {
      adjustMove = fixFixedNode(getScrollInfo(fixedNode));
    } else {
      if (winInfo) {
        adjustMove = fixFixedNode(winInfo.scrollInfo);
      } else {
        adjustMove = fixFixedNode(getScrollInfo());
      }
    }
  } else if (scrollNode) {
    adjustMove = fixScrollNode(getScrollInfo(scrollNode));
  }

  var loc;
  var move;
  locs.some(function (locItem) {
    toLoc = locItem;
    loc = getAlignWithLoc(toLoc);
    move = alignWith(targetInfo, floatInfo, loc);

    if (adjustMove) {
      move = adjustMove(move);
    }

    if (!winInfo) {
      return true;
    } else {
      var movePos = getAfterMove(floatInfo, move);
      var bFullOnScreen = isFullOnScreen(movePos, winInfo.scrollInfo);

      if (bFullOnScreen) {
        return true;
      } else {
        return false;
      }
    }
  });
  var result = {
    loc: loc,
    toLoc: toLoc,
    move: move
  }; //console.log(result);

  return result;
};

export default alignUI;