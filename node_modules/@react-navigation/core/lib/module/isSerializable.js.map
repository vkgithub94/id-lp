{"version":3,"sources":["isSerializable.tsx"],"names":["isSerializableWithoutCircularReference","o","seen","Set","undefined","Object","prototype","toString","call","Array","isArray","has","add","it","key","isSerializable"],"mappings":"AAAA,GAAMA,CAAAA,sCAAsC,CAAG,QAAzCA,CAAAA,sCAAyC,CAC7CC,CAD6C,CAGjC,IADZC,CAAAA,IACY,2DADL,GAAIC,CAAAA,GAAJ,EACK,CACZ,GACEF,CAAC,GAAKG,SAAN,EACAH,CAAC,GAAK,IADN,EAEA,MAAOA,CAAAA,CAAP,GAAa,SAFb,EAGA,MAAOA,CAAAA,CAAP,GAAa,QAHb,EAIA,MAAOA,CAAAA,CAAP,GAAa,QALf,CAME,CACA,MAAO,KAAP,CACD,CAED,GACEI,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BP,CAA/B,IAAsC,iBAAtC,EACA,CAACQ,KAAK,CAACC,OAAN,CAAcT,CAAd,CAFH,CAGE,CACA,MAAO,MAAP,CACD,CAED,GAAIC,IAAI,CAACS,GAAL,CAASV,CAAT,CAAJ,CAAiB,CACf,MAAO,MAAP,CACD,CAEDC,IAAI,CAACU,GAAL,CAASX,CAAT,EAEA,GAAIQ,KAAK,CAACC,OAAN,CAAcT,CAAd,CAAJ,CAAsB,CACpB,kBAAiBA,CAAjB,4IAAoB,uIAATY,CAAAA,GAAS,MAClB,GAAI,CAACb,sCAAsC,CAACa,GAAD,CAAKX,IAAL,CAA3C,CAAuD,CACrD,MAAO,MAAP,CACD,CACF,CACF,CAND,IAMO,CACL,IAAK,GAAMY,CAAAA,IAAX,GAAkBb,CAAAA,CAAlB,CAAqB,CACnB,GAAI,CAACD,sCAAsC,CAACC,CAAC,CAACa,IAAD,CAAF,CAASZ,IAAT,CAA3C,CAA2D,CACzD,MAAO,MAAP,CACD,CACF,CACF,CAED,MAAO,KAAP,CACD,CA1CD,CA4CA,cAAe,SAASa,CAAAA,cAAT,CAAwBd,CAAxB,CAAmD,CAChE,MAAOD,CAAAA,sCAAsC,CAACC,CAAD,CAA7C,CACD","sourcesContent":["const isSerializableWithoutCircularReference = (\n  o: { [key: string]: any },\n  seen = new Set<any>()\n): boolean => {\n  if (\n    o === undefined ||\n    o === null ||\n    typeof o === 'boolean' ||\n    typeof o === 'number' ||\n    typeof o === 'string'\n  ) {\n    return true;\n  }\n\n  if (\n    Object.prototype.toString.call(o) !== '[object Object]' &&\n    !Array.isArray(o)\n  ) {\n    return false;\n  }\n\n  if (seen.has(o)) {\n    return false;\n  }\n\n  seen.add(o);\n\n  if (Array.isArray(o)) {\n    for (const it of o) {\n      if (!isSerializableWithoutCircularReference(it, seen)) {\n        return false;\n      }\n    }\n  } else {\n    for (const key in o) {\n      if (!isSerializableWithoutCircularReference(o[key], seen)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nexport default function isSerializable(o: { [key: string]: any }) {\n  return isSerializableWithoutCircularReference(o);\n}\n"]}