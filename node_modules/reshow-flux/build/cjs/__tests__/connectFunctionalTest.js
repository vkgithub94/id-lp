'use strict';

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("reshow-runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("reshow-runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("reshow-runtime/helpers/inherits"));

var _react = _interopRequireDefault(require("react"));

var _index = require("../index");

var _chai = require("chai");

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact["default"]()
});
describe('Test Connect Functional', function () {
  var FakeStore =
  /*#__PURE__*/
  function (_ReduceStore) {
    (0, _inherits2["default"])(FakeStore, _ReduceStore);

    function FakeStore() {
      (0, _classCallCheck2["default"])(this, FakeStore);
      return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(FakeStore).apply(this, arguments));
    }

    (0, _createClass2["default"])(FakeStore, [{
      key: "getInitialState",
      value: function getInitialState() {
        return [];
      }
    }, {
      key: "reduce",
      value: function reduce(state, action) {
        return action;
      }
    }]);
    return FakeStore;
  }(_index.ReduceStore);

  var dispatcher = new _index.Dispatcher();
  var store = new FakeStore(dispatcher);
  it('could register with store', function () {
    var FakeComponent = function FakeComponent(_ref) {
      var aaa = _ref.aaa;
      return _react["default"].createElement("div", null, aaa);
    };

    var fakeGetStores = function fakeGetStores() {
      return [store];
    };

    var fakeCalculateState = function fakeCalculateState(prevState) {
      var state = store.getState();
      return {
        aaa: state.aaa
      };
    };

    var FakeConnected = (0, _index.connectFunctional)(FakeComponent, fakeGetStores, fakeCalculateState);

    var vDom = _react["default"].createElement(FakeConnected, null);

    var html = (0, _enzyme.shallow)(vDom);
    dispatcher.dispatch({
      aaa: 'Hello dispatcher!'
    });
    html.update();
    (0, _chai.expect)(html.html()).to.equal('<div>Hello dispatcher!</div>');
  });
});