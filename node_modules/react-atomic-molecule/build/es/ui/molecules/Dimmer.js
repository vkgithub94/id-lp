import _extends from "reshow-runtime/es/helpers/extends";
import _objectSpread from "reshow-runtime/es/helpers/objectSpread2";
import _objectWithoutProperties from "reshow-runtime/es/helpers/objectWithoutProperties";

/* jshint esnext: true */
import React from 'react';
import { mixClass } from 'class-lib';
import Content from '../molecules/Content';
import SemanticUI from '../molecules/SemanticUI';

var Dimmer = function Dimmer(props) {
  var className = props.className,
      show = props.show,
      children = props.children,
      center = props.center,
      content = props.content,
      contentStyle = props.contentStyle,
      isModal = props.isModal,
      others = _objectWithoutProperties(props, ["className", "show", "children", "center", "content", "contentStyle", "isModal"]);

  if (!show) {
    return null;
  }

  var classes = mixClass(className, 'transition visible active', {
    dimmer: !isModal,
    modal: isModal
  });
  var child;

  if (center && content) {
    child = React.createElement(Content, {
      style: _objectSpread({
        boxSizing: 'inherit'
      }, contentStyle)
    }, children);
  } else {
    child = children;
  }

  return React.createElement(SemanticUI, _extends({}, others, {
    className: classes
  }), child);
};

Dimmer.defaultProps = {
  show: false,
  isModal: false,
  center: true,
  content: true // same with center attriube, just let user not confuse 

};
export default Dimmer;