var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.default=useLinking;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _core=require("@react-navigation/core");var isUsingLinking=false;function useLinking(ref,_ref){var prefixes=_ref.prefixes,config=_ref.config,_ref$getStateFromPath=_ref.getStateFromPath,getStateFromPath=_ref$getStateFromPath===void 0?_core.getStateFromPath:_ref$getStateFromPath;React.useEffect(function(){if(isUsingLinking){throw new Error("Looks like you are using 'useLinking' in multiple components. This is likely an error since deep links should only be handled in one place to avoid conflicts.");}else{isUsingLinking=true;}return function(){isUsingLinking=false;};});var prefixesRef=React.useRef(prefixes);var configRef=React.useRef(config);var getStateFromPathRef=React.useRef(getStateFromPath);React.useEffect(function(){prefixesRef.current=prefixes;configRef.current=config;getStateFromPathRef.current=getStateFromPath;},[config,getStateFromPath,prefixes]);var extractPathFromURL=React.useCallback(function(url){for(var _iterator=prefixesRef.current,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol==="function"?Symbol.iterator:"@@iterator"]();;){var _ref2;if(_isArray){if(_i>=_iterator.length)break;_ref2=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref2=_i.value;}var _prefix=_ref2;if(url.startsWith(_prefix)){return url.replace(_prefix,'');}}return undefined;},[]);var getInitialState=React.useCallback(function _callee(){var url,path;return _regenerator.default.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regenerator.default.awrap(_reactNative.Linking.getInitialURL());case 2:url=_context.sent;path=url?extractPathFromURL(url):null;if(!path){_context.next=8;break;}return _context.abrupt("return",getStateFromPathRef.current(path,configRef.current));case 8:return _context.abrupt("return",undefined);case 9:case"end":return _context.stop();}}});},[extractPathFromURL]);React.useEffect(function(){var listener=function listener(_ref3){var url=_ref3.url;var path=extractPathFromURL(url);var navigation=ref.current;if(navigation&&path){var state=getStateFromPathRef.current(path,configRef.current);if(state){var action=(0,_core.getActionFromState)(state);if(action.type==='RESET_ROOT'){navigation.resetRoot(action.payload);}else{navigation.dispatch(action);}}}};_reactNative.Linking.addEventListener('url',listener);return function(){return _reactNative.Linking.removeEventListener('url',listener);};},[extractPathFromURL,ref]);return{getInitialState:getInitialState};}
//# sourceMappingURL=useLinking.native.js.map