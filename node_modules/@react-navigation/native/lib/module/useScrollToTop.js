import*as React from'react';import{useNavigation,useRoute}from'@react-navigation/core';function getScrollableNode(ref){if(ref.current==null){return null;}if('scrollToTop'in ref.current||'scrollTo'in ref.current||'scrollToOffset'in ref.current||'scrollResponderScrollTo'in ref.current){return ref.current;}else if('getScrollResponder'in ref.current){return ref.current.getScrollResponder();}else if('getNode'in ref.current){return ref.current.getNode();}else{return ref.current;}}export default function useScrollToTop(ref){var navigation=useNavigation();var route=useRoute();React.useEffect(function(){var current=navigation;while(current&&current.dangerouslyGetState().type!=='tab'){current=current.dangerouslyGetParent();}if(!current){return;}var unsubscribe=current.addListener('tabPress',function(e){var isFocused=navigation.isFocused();var isFirst=navigation===current||navigation.dangerouslyGetState().routes[0].key===route.key;requestAnimationFrame(function(){var scrollable=getScrollableNode(ref);if(isFocused&&isFirst&&scrollable&&!e.defaultPrevented){if('scrollToTop'in scrollable){scrollable.scrollToTop();}else if('scrollTo'in scrollable){scrollable.scrollTo({y:0,animated:true});}else if('scrollToOffset'in scrollable){scrollable.scrollToOffset({y:0,animated:true});}else if('scrollResponderScrollTo'in scrollable){scrollable.scrollResponderScrollTo({y:0,animated:true});}}});});return unsubscribe;},[navigation,ref,route.key]);}
//# sourceMappingURL=useScrollToTop.js.map