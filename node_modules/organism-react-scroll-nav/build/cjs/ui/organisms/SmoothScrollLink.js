"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _extends2 = _interopRequireDefault(require("reshow-runtime/helpers/extends"));

var _objectWithoutProperties2 = _interopRequireDefault(require("reshow-runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("reshow-runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf3 = _interopRequireDefault(require("reshow-runtime/helpers/getPrototypeOf"));

var _assertThisInitialized2 = _interopRequireDefault(require("reshow-runtime/helpers/assertThisInitialized"));

var _inherits2 = _interopRequireDefault(require("reshow-runtime/helpers/inherits"));

var _defineProperty2 = _interopRequireDefault(require("reshow-runtime/helpers/defineProperty"));

var _react = _interopRequireWildcard(require("react"));

var _smoothScrollTo = _interopRequireDefault(require("smooth-scroll-to"));

var _getoffset = _interopRequireDefault(require("getoffset"));

var _index = require("../../src/index");

var _scrollStore = _interopRequireDefault(require("../../src/stores/scrollStore"));

var _fastScrollStore = _interopRequireDefault(require("../../src/stores/fastScrollStore"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var scollTimer = null;

var resetTimer = function resetTimer() {
  if (scollTimer) {
    clearTimeout(scollTimer);
    scollTimer = false;
  }
};

var SmoothScrollLink =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2["default"])(SmoothScrollLink, _PureComponent);

  function SmoothScrollLink() {
    var _getPrototypeOf2;

    var _this;

    (0, _classCallCheck2["default"])(this, SmoothScrollLink);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf3["default"])(SmoothScrollLink)).call.apply(_getPrototypeOf2, [this].concat(args)));
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "state", {
      scrollRefElement: null
    });
    (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this), "handleClick", function (e) {
      var props = _this.props;

      var store = _this.useStore();

      var preventDefault = props.preventDefault,
          targetId = props.targetId;
      var scrollRefElement = _this.state.scrollRefElement;

      if (preventDefault) {
        e.preventDefault();
      }

      resetTimer();
      var offset = store.getOffset(targetId);

      if (offset) {
        var margin = _this.getMargin(props, scrollRefElement);

        scollTimer = true;
        (0, _smoothScrollTo["default"])(offset.top - margin, null, null, function () {
          if (true !== scollTimer) {
            return;
          }

          scollTimer = setTimeout(function () {
            margin = _this.getMargin(props, scrollRefElement);
            offset = store.getOffset(targetId);
            (0, _smoothScrollTo["default"])(offset.top - margin, 100);
          }, 500);
        });
      }
    });
    return _this;
  }

  (0, _createClass2["default"])(SmoothScrollLink, [{
    key: "useStore",
    value: function useStore() {
      var noDelay = this.props.noDelay;
      return noDelay ? _fastScrollStore["default"] : _scrollStore["default"];
    }
  }, {
    key: "getMargin",
    value: function getMargin(props, ref) {
      var scrollRefLoc = props.scrollRefLoc,
          scrollMargin = props.scrollMargin;
      var margin = 0;

      if (ref) {
        var refOffset = (0, _getoffset["default"])(ref, false);

        switch (scrollRefLoc) {
          case 'bottom':
            margin += refOffset.bottom - refOffset.top;
            break;

          default:
          case 'top':
            break;
        }
      }

      if (!isNaN(scrollMargin)) {
        margin += scrollMargin;
      }

      margin--;
      return margin;
    }
  }, {
    key: "componentDidMount",
    value: function componentDidMount() {
      var dom = document.getElementById(this.props.scrollRefId);

      if (dom) {
        this.setState({
          scrollRefElement: dom
        });
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      resetTimer();
    }
  }, {
    key: "render",
    value: function render() {
      var props = this.props;
      var targetId = props.targetId,
          scrollRefLoc = props.scrollRefLoc,
          scrollMargin = props.scrollMargin,
          scrollRefId = props.scrollRefId,
          style = props.style,
          preventDefault = props.preventDefault,
          others = (0, _objectWithoutProperties2["default"])(props, ["targetId", "scrollRefLoc", "scrollMargin", "scrollRefId", "style", "preventDefault"]);
      var scrollRefElement = this.state.scrollRefElement;
      var margin = this.getMargin(props, scrollRefElement);
      return _react["default"].createElement(_index.ScrollReceiver, (0, _extends2["default"])({
        atom: "a"
      }, others, {
        targetId: targetId,
        scrollMargin: margin,
        style: _objectSpread({}, Styles.link, {}, style),
        onClick: this.handleClick
      }));
    }
  }]);
  return SmoothScrollLink;
}(_react.PureComponent);

(0, _defineProperty2["default"])(SmoothScrollLink, "defaultProps", {
  scrollRefId: '',
  scrollRefLoc: 'bottom',
  preventDefault: true,
  noDelay: false
});
var _default = SmoothScrollLink;
exports["default"] = _default;
var Styles = {
  link: {
    cursor: 'pointer'
  }
};
module.exports = exports.default;