"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _chai = require("chai");

var _index = _interopRequireDefault(require("../index.js"));

describe('test array merge', function () {
  it('should return array, when only one is string', function () {
    var acture = (0, _index["default"])('a');
    (0, _chai.expect)(acture).to.deep.equal(['a']);
  });
  it('should return same, when only one is array', function () {
    var acture = (0, _index["default"])(['a']);
    (0, _chai.expect)(acture).to.deep.equal(['a']);
  });
  it('should return same, when pass null or undefined', function () {
    var acture = (0, _index["default"])(['a'], null, undefined);
    (0, _chai.expect)(acture).to.deep.equal(['a']);
  });
  it('should return array, when merge two arrays', function () {
    var acture = (0, _index["default"])(['a'], ['b']);
    (0, _chai.expect)(acture).to.deep.equal(['a', 'b']);
  });
  it('should return array, when merge string and array', function () {
    var acture = (0, _index["default"])('a', ['b']);
    (0, _chai.expect)(acture).to.deep.equal(['a', 'b']);
  });
  it('should return array, when merge string and string', function () {
    var acture = (0, _index["default"])('a', 'b');
    (0, _chai.expect)(acture).to.deep.equal(['a', 'b']);
  });
  it('should return array, when merge multi arrays', function () {
    var acture = (0, _index["default"])(['a'], ['b'], ['c']);
    (0, _chai.expect)(acture).to.deep.equal(['a', 'b', 'c']);
  });
});