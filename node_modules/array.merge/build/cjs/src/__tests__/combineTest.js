"use strict";

var _chai = require("chai");

var _index = require("../index.js");

describe('Test array combine', function () {
  it('test combine', function () {
    var arr = {
      foo: ['a', 'b', 'c'],
      bar: ['d', 'e', 'f']
    };
    var acture = (0, _index.combine)(arr);
    var expected = [{
      foo: 'a',
      bar: 'd'
    }, {
      foo: 'b',
      bar: 'e'
    }, {
      foo: 'c',
      bar: 'f'
    }];
    (0, _chai.expect)(acture).to.deep.equal(expected);
  });
  it('test combine with object key', function () {
    var arr = {
      foo: ['a', 'b', 'c'],
      bar: ['d', 'e', 'f']
    };
    var acture = (0, _index.combine)(arr, 'foo');
    var expected = {
      a: {
        foo: 'a',
        bar: 'd'
      },
      b: {
        foo: 'b',
        bar: 'e'
      },
      c: {
        foo: 'c',
        bar: 'f'
      }
    };
    (0, _chai.expect)(acture).to.deep.equal(expected);
  });
  it('not array', function () {
    var acture = (0, _index.combine)(null);
    (0, _chai.expect)(acture).to.be.undefined;
  });
});
describe('Test combine sub', function () {
  var subArr = {
    someSubKey: {
      foo: ['a'],
      bar: ['d']
    }
  };
  it('test combine sub', function () {
    var arr = [{
      somekey: 'someSubKey'
    }];
    var acture = (0, _index.combineSub)(arr, subArr, 'somekey');
    var expected = [{
      somekey: [{
        foo: 'a',
        bar: 'd'
      }]
    }];
    (0, _chai.expect)(acture).to.deep.equal(expected);
  });
  it('test sub key not exists', function () {
    var arr = [{
      somekey: 'xxx'
    }];
    var acture = (0, _index.combineSub)(arr, subArr, 'somekey');
    var expected = [{
      somekey: null
    }];
    (0, _chai.expect)(acture).to.deep.equal(expected);
  });
});