import _classCallCheck from "reshow-runtime/es/helpers/classCallCheck";
import _createClass from "reshow-runtime/es/helpers/createClass";
import _possibleConstructorReturn from "reshow-runtime/es/helpers/possibleConstructorReturn";
import _getPrototypeOf from "reshow-runtime/es/helpers/getPrototypeOf";
import _inherits from "reshow-runtime/es/helpers/inherits";
import React, { PureComponent } from 'react';
import connect from './connect';

var connectFunctional = function connectFunctional(viewFn, _getStores, _calculateState, options) {
  var FunctionalConnected =
  /*#__PURE__*/
  function (_PureComponent) {
    _inherits(FunctionalConnected, _PureComponent);

    function FunctionalConnected() {
      _classCallCheck(this, FunctionalConnected);

      return _possibleConstructorReturn(this, _getPrototypeOf(FunctionalConnected).apply(this, arguments));
    }

    _createClass(FunctionalConnected, [{
      key: "render",
      value: function render() {
        return viewFn(this.state);
      }
    }], [{
      key: "getStores",
      value: function getStores(props) {
        return _getStores(props);
      }
    }, {
      key: "calculateState",
      value: function calculateState(prevState, props) {
        return _calculateState(prevState, props);
      }
    }]);

    return FunctionalConnected;
  }(PureComponent);

  var viewFnName = viewFn.displayName || viewFn.name || 'FunctionalConnected';
  FunctionalConnected.displayName = viewFnName;
  return connect(FunctionalConnected, options);
};

export default connectFunctional;