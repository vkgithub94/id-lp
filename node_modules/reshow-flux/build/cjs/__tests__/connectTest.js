"use strict";

var _interopRequireWildcard = require("reshow-runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

var _assertThisInitialized2 = _interopRequireDefault(require("reshow-runtime/helpers/assertThisInitialized"));

var _defineProperty2 = _interopRequireDefault(require("reshow-runtime/helpers/defineProperty"));

var _extends2 = _interopRequireDefault(require("reshow-runtime/helpers/extends"));

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _classCallCheck2 = _interopRequireDefault(require("reshow-runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("reshow-runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("reshow-runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf4 = _interopRequireDefault(require("reshow-runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("reshow-runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _index = require("../index");

var _chai = require("chai");

var _enzyme = require("enzyme");

var _enzymeAdapterReact = _interopRequireDefault(require("enzyme-adapter-react-16"));

(0, _enzyme.configure)({
  adapter: new _enzymeAdapterReact["default"]()
});
describe('Test Connect', function () {
  var FakeStore =
  /*#__PURE__*/
  function (_ReduceStore) {
    (0, _inherits2["default"])(FakeStore, _ReduceStore);

    function FakeStore() {
      (0, _classCallCheck2["default"])(this, FakeStore);
      return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(FakeStore).apply(this, arguments));
    }

    (0, _createClass2["default"])(FakeStore, [{
      key: "getInitialState",
      value: function getInitialState() {
        return [];
      }
    }, {
      key: "reduce",
      value: function reduce(state, action) {
        return action;
      }
    }]);
    return FakeStore;
  }(_index.ReduceStore);

  var dispatcher;
  var store;
  beforeEach(function () {
    dispatcher = new _index.Dispatcher();
    store = new FakeStore(dispatcher);
  });
  it('could register with store', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_Component) {
      (0, _inherits2["default"])(FakeComponent, _Component);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.state.foo);
        }
      }], [{
        key: "getStores",
        value: function getStores() {
          return [store];
        }
      }, {
        key: "calculateState",
        value: function calculateState(prevState) {
          return {
            foo: 'bar'
          };
        }
      }]);
      return FakeComponent;
    }(_react.Component);

    var FakeConnected = (0, _index.connect)(FakeComponent);

    var vDom = _react["default"].createElement(FakeConnected, null);

    var actual = (0, _enzyme.shallow)(vDom).html();
    (0, _chai.expect)(actual).to.equal('<div>bar</div>');
  });
  it('could work with dispatcher', function () {
    var calculateTimes = 0;

    var FakeComponent =
    /*#__PURE__*/
    function (_Component2) {
      (0, _inherits2["default"])(FakeComponent, _Component2);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.state.aaa);
        }
      }], [{
        key: "getStores",
        value: function getStores() {
          return [store];
        }
      }, {
        key: "calculateState",
        value: function calculateState(prevState) {
          var state = store.getState();
          calculateTimes++;
          return {
            aaa: state.aaa
          };
        }
      }]);
      return FakeComponent;
    }(_react.Component);

    var FakeConnected = (0, _index.connect)(FakeComponent);
    (0, _chai.expect)(calculateTimes).to.equal(0);

    var vDom = _react["default"].createElement(FakeConnected, null);

    (0, _chai.expect)(calculateTimes).to.equal(0);
    var html = (0, _enzyme.shallow)(vDom);
    (0, _chai.expect)(calculateTimes).to.equal(1);
    dispatcher.dispatch({
      aaa: 'Hello dispatcher!'
    });
    html.update();
    (0, _chai.expect)(calculateTimes).to.equal(2);
    (0, _chai.expect)(html.html()).to.equal('<div>Hello dispatcher!</div>');
    html.unmount();
    dispatcher.dispatch({
      aaa: 'Hello Unmount!'
    });
    (0, _chai.expect)(calculateTimes).to.equal(2);
  });
  it('could work withProps', function () {
    var getStoresProps = null;
    var calculateStateProps = null;

    var FakeComponent =
    /*#__PURE__*/
    function (_Component3) {
      (0, _inherits2["default"])(FakeComponent, _Component3);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.state.foo);
        }
      }], [{
        key: "getStores",
        value: function getStores(props) {
          getStoresProps = props;
          return [store];
        }
      }, {
        key: "calculateState",
        value: function calculateState(prevState, props) {
          calculateStateProps = props;
          var state = store.getState();
          return {
            foo: props.foo
          };
        }
      }]);
      return FakeComponent;
    }(_react.Component);

    var FakeConnected = (0, _index.connect)(FakeComponent, {
      withProps: true
    });
    var changeFoo;

    var Parent =
    /*#__PURE__*/
    function (_Component4) {
      (0, _inherits2["default"])(Parent, _Component4);

      function Parent(props) {
        var _this;

        (0, _classCallCheck2["default"])(this, Parent);
        _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(Parent).call(this, props));

        changeFoo = function changeFoo(v) {
          _this.setState({
            foo: v
          });
        };

        return _this;
      }

      (0, _createClass2["default"])(Parent, [{
        key: "render",
        value: function render() {
          var foo = null;

          if (this.state && this.state.foo) {
            foo = this.state.foo;
          }

          return _react["default"].createElement(FakeConnected, {
            foo: foo
          });
        }
      }]);
      return Parent;
    }(_react.Component);

    var vDom = _react["default"].createElement(Parent, null);

    var html = (0, _enzyme.mount)(vDom);
    (0, _chai.expect)(getStoresProps).to.deep.equal({
      foo: null
    });
    (0, _chai.expect)(calculateStateProps).to.deep.equal({
      foo: null
    });
    changeFoo('bar');
    (0, _chai.expect)(html.html()).to.equal('<div>bar</div>');
    (0, _chai.expect)(getStoresProps).to.deep.equal({
      foo: 'bar'
    });
    (0, _chai.expect)(calculateStateProps).to.deep.equal({
      foo: 'bar'
    });
  });
  it('could work with getDerivedStateFromProps override', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_Component5) {
      (0, _inherits2["default"])(FakeComponent, _Component5);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.state.foo);
        }
      }], [{
        key: "getStores",
        value: function getStores(props) {
          return [store];
        }
      }, {
        key: "calculateState",
        value: function calculateState(prevState, props) {
          var state = store.getState();
          return (0, _objectSpread2["default"])({}, props, {
            testMerge: prevState.testMerge + 1
          });
        }
      }, {
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var keys = Object.keys;
          return {
            testMerge: prevState.testMerge || 0,
            kProps: keys(nextProps),
            kState: keys(prevState)
          };
        }
      }]);
      return FakeComponent;
    }(_react.Component);

    var FakeConnected = (0, _index.connect)(FakeComponent, {
      withProps: true
    });
    var change1;
    var change2;
    var child1;
    var child2;

    var Parent =
    /*#__PURE__*/
    function (_Component6) {
      (0, _inherits2["default"])(Parent, _Component6);

      function Parent(props) {
        var _this2;

        (0, _classCallCheck2["default"])(this, Parent);
        _this2 = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(Parent).call(this, props));

        change1 = function change1(v) {
          return _this2.setState({
            child1: v
          });
        };

        change2 = function change2(v) {
          return _this2.setState({
            child2: v
          });
        };

        _this2.state = {};
        return _this2;
      }

      (0, _createClass2["default"])(Parent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, _react["default"].createElement(FakeConnected, (0, _extends2["default"])({}, this.state.child1, {
            ref: function ref(el) {
              return child1 = el;
            }
          })), _react["default"].createElement(FakeConnected, (0, _extends2["default"])({}, this.state.child2, {
            ref: function ref(el) {
              return child2 = el;
            }
          })));
        }
      }]);
      return Parent;
    }(_react.Component);

    var vDom = _react["default"].createElement(Parent, null);

    var html = (0, _enzyme.mount)(vDom);
    (0, _chai.expect)(child1.state).to.deep.equal({
      kProps: [],
      kState: [],
      testMerge: 1
    });
    (0, _chai.expect)(child2.state).to.deep.equal({
      kProps: [],
      kState: [],
      testMerge: 1
    });
    change1({
      foo: 'bar'
    });
    (0, _chai.expect)(child1.state).to.deep.equal({
      kProps: ['foo'],
      kState: ['testMerge', 'kProps', 'kState'],
      foo: 'bar',
      testMerge: 2
    });
    change2({
      bar: 'foo'
    });
    (0, _chai.expect)(child2.state).to.deep.equal({
      kProps: ['bar'],
      kState: ['testMerge', 'kProps', 'kState'],
      bar: 'foo',
      testMerge: 3
    });
  });
  it('could work withConstructor equal true', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_Component7) {
      (0, _inherits2["default"])(FakeComponent, _Component7);

      function FakeComponent() {
        var _getPrototypeOf2;

        var _this3;

        (0, _classCallCheck2["default"])(this, FakeComponent);

        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }

        _this3 = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf2 = (0, _getPrototypeOf4["default"])(FakeComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this3), "didMount", false);
        return _this3;
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.didMount = true;
        }
      }, {
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.state.foo);
        }
      }], [{
        key: "getStores",
        value: function getStores() {
          return [store];
        }
      }, {
        key: "calculateState",
        value: function calculateState(prevState) {
          return {
            foo: 'bar'
          };
        }
      }]);
      return FakeComponent;
    }(_react.Component);

    var FakeConnected = (0, _index.connect)(FakeComponent);

    var vDom = _react["default"].createElement(FakeConnected, {
      withConstructor: true
    });

    var html = (0, _enzyme.shallow)(vDom, {
      disableLifecycleMethods: true
    });
    var instance = html.instance();
    (0, _chai.expect)(instance.didMount).to.equal(false);
    (0, _chai.expect)(instance.__stores).to.have.lengthOf(1);
  });
  it('could work withConstructor equal false', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_Component8) {
      (0, _inherits2["default"])(FakeComponent, _Component8);

      function FakeComponent() {
        var _getPrototypeOf3;

        var _this4;

        (0, _classCallCheck2["default"])(this, FakeComponent);

        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
          args[_key2] = arguments[_key2];
        }

        _this4 = (0, _possibleConstructorReturn2["default"])(this, (_getPrototypeOf3 = (0, _getPrototypeOf4["default"])(FakeComponent)).call.apply(_getPrototypeOf3, [this].concat(args)));
        (0, _defineProperty2["default"])((0, _assertThisInitialized2["default"])(_this4), "didMount", false);
        return _this4;
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.didMount = true;
        }
      }, {
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.state.foo);
        }
      }], [{
        key: "getStores",
        value: function getStores() {
          return [store];
        }
      }, {
        key: "calculateState",
        value: function calculateState(prevState) {
          return {
            foo: 'bar'
          };
        }
      }]);
      return FakeComponent;
    }(_react.Component);

    var FakeConnected = (0, _index.connect)(FakeComponent);

    var vDom = _react["default"].createElement(FakeConnected, null);

    var html = (0, _enzyme.shallow)(vDom);
    var instance = html.instance();
    (0, _chai.expect)(instance.didMount).to.equal(true);
    (0, _chai.expect)(instance.__stores).to.have.lengthOf(1);
  });
  it('could work with empty calculateState', function () {
    var FakeComponent =
    /*#__PURE__*/
    function (_Component9) {
      (0, _inherits2["default"])(FakeComponent, _Component9);

      function FakeComponent() {
        (0, _classCallCheck2["default"])(this, FakeComponent);
        return (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf4["default"])(FakeComponent).apply(this, arguments));
      }

      (0, _createClass2["default"])(FakeComponent, [{
        key: "render",
        value: function render() {
          return _react["default"].createElement("div", null, this.state.foo);
        }
      }], [{
        key: "getStores",
        value: function getStores() {
          return [store];
        }
      }, {
        key: "calculateState",
        value: function calculateState(prevState) {}
      }]);
      return FakeComponent;
    }(_react.Component);

    var FakeConnected = (0, _index.connect)(FakeComponent);

    var vDom = _react["default"].createElement(FakeConnected, null);

    var html = (0, _enzyme.shallow)(vDom);
    var state = html.state();
    (0, _chai.expect)(state).to.be.empty;
  });
});