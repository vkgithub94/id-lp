"use strict";

var _interopRequireDefault = require("reshow-runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _objectSpread2 = _interopRequireDefault(require("reshow-runtime/helpers/objectSpread2"));

var _slicedToArray2 = _interopRequireDefault(require("reshow-runtime/helpers/slicedToArray"));

var _react = require("react");

var _reshowBuild = _interopRequireDefault(require("reshow-build"));

var _array = _interopRequireDefault(require("array.dedup"));

var _reshowFluxBase = require("reshow-flux-base");

var connectHook = function connectHook(Base, options) {
  var _ref = options || {},
      getStores = _ref.getStores,
      calculateState = _ref.calculateState,
      defaultProps = _ref.defaultProps,
      displayName = _ref.displayName;

  var Connected = function Connected(props) {
    var _useState = (0, _react.useState)(function () {
      return {
        state: calculateState({}, props),
        props: props
      };
    }),
        _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
        data = _useState2[0],
        setData = _useState2[1];

    (0, _react.useEffect)(function () {
      var stores = (0, _array["default"])(getStores(props)) || [];

      if (stores && stores.length) {
        var __unmount__;

        var handleChange = function handleChange() {
          if (!__unmount__) {
            setData(function (prev) {
              return {
                __init__: true,
                props: props,
                state: (0, _objectSpread2["default"])({}, prev.state, {}, props, {}, calculateState(prev.state, props))
              };
            });
          }
        };

        stores.forEach(function (store) {
          return store.addListener(handleChange, _reshowFluxBase.CHANGE);
        });

        if (!data.__init__ || data.props !== props) {
          handleChange();
        }

        return function () {
          __unmount__ = true;
          stores.forEach(function (store) {
            return store.removeListener(handleChange, _reshowFluxBase.CHANGE);
          });
        };
      }
    }, [props]);
    return (0, _react.useMemo)(function () {
      return (0, _reshowBuild["default"])(Base)(data.state);
    }, [data.state]);
  };

  var componentName = displayName || Base.displayName || Base.name;
  Connected.displayName = 'HookConnected(' + componentName + ')';

  if (defaultProps) {
    Connected.defaultProps = defaultProps;
  }

  return Connected;
};

var _default = connectHook;
exports["default"] = _default;
module.exports = exports.default;